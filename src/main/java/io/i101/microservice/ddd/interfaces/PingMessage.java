// Code generated by Wire protocol buffer compiler, do not edit.
// Source file: PingMessage.proto
package io.i101.microservice.ddd.interfaces;

import com.squareup.wire.FieldEncoding;
import com.squareup.wire.Message;
import com.squareup.wire.ProtoAdapter;
import com.squareup.wire.ProtoReader;
import com.squareup.wire.ProtoWriter;
import com.squareup.wire.WireField;
import com.squareup.wire.internal.Internal;
import java.io.IOException;
import java.lang.Integer;
import java.lang.Object;
import java.lang.Override;
import java.lang.String;
import java.lang.StringBuilder;
import okio.ByteString;

public final class PingMessage extends Message<PingMessage, PingMessage.Builder> {
  public static final ProtoAdapter<PingMessage> ADAPTER = new ProtoAdapter_PingMessage();

  private static final long serialVersionUID = 0L;

  public static final String DEFAULT_ID = "";

  public static final String DEFAULT_NAME = "";

  public static final String DEFAULT_EMAIL = "";

  public static final Integer DEFAULT_AGE = 0;

  @WireField(
      tag = 1,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String id;

  @WireField(
      tag = 2,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String name;

  @WireField(
      tag = 3,
      adapter = "com.squareup.wire.ProtoAdapter#STRING"
  )
  public final String email;

  @WireField(
      tag = 4,
      adapter = "com.squareup.wire.ProtoAdapter#INT32"
  )
  public final Integer age;

  public PingMessage(String id, String name, String email, Integer age) {
    this(id, name, email, age, ByteString.EMPTY);
  }

  public PingMessage(String id, String name, String email, Integer age, ByteString unknownFields) {
    super(ADAPTER, unknownFields);
    this.id = id;
    this.name = name;
    this.email = email;
    this.age = age;
  }

  @Override
  public Builder newBuilder() {
    Builder builder = new Builder();
    builder.id = id;
    builder.name = name;
    builder.email = email;
    builder.age = age;
    builder.addUnknownFields(unknownFields());
    return builder;
  }

  @Override
  public boolean equals(Object other) {
    if (other == this) return true;
    if (!(other instanceof PingMessage)) return false;
    PingMessage o = (PingMessage) other;
    return unknownFields().equals(o.unknownFields())
        && Internal.equals(id, o.id)
        && Internal.equals(name, o.name)
        && Internal.equals(email, o.email)
        && Internal.equals(age, o.age);
  }

  @Override
  public int hashCode() {
    int result = super.hashCode;
    if (result == 0) {
      result = unknownFields().hashCode();
      result = result * 37 + (id != null ? id.hashCode() : 0);
      result = result * 37 + (name != null ? name.hashCode() : 0);
      result = result * 37 + (email != null ? email.hashCode() : 0);
      result = result * 37 + (age != null ? age.hashCode() : 0);
      super.hashCode = result;
    }
    return result;
  }

  @Override
  public String toString() {
    StringBuilder builder = new StringBuilder();
    if (id != null) builder.append(", id=").append(id);
    if (name != null) builder.append(", name=").append(name);
    if (email != null) builder.append(", email=").append(email);
    if (age != null) builder.append(", age=").append(age);
    return builder.replace(0, 2, "PingMessage{").append('}').toString();
  }

  public static final class Builder extends Message.Builder<PingMessage, Builder> {
    public String id;

    public String name;

    public String email;

    public Integer age;

    public Builder() {
    }

    public Builder id(String id) {
      this.id = id;
      return this;
    }

    public Builder name(String name) {
      this.name = name;
      return this;
    }

    public Builder email(String email) {
      this.email = email;
      return this;
    }

    public Builder age(Integer age) {
      this.age = age;
      return this;
    }

    @Override
    public PingMessage build() {
      return new PingMessage(id, name, email, age, super.buildUnknownFields());
    }
  }

  private static final class ProtoAdapter_PingMessage extends ProtoAdapter<PingMessage> {
    public ProtoAdapter_PingMessage() {
      super(FieldEncoding.LENGTH_DELIMITED, PingMessage.class);
    }

    @Override
    public int encodedSize(PingMessage value) {
      return ProtoAdapter.STRING.encodedSizeWithTag(1, value.id)
          + ProtoAdapter.STRING.encodedSizeWithTag(2, value.name)
          + ProtoAdapter.STRING.encodedSizeWithTag(3, value.email)
          + ProtoAdapter.INT32.encodedSizeWithTag(4, value.age)
          + value.unknownFields().size();
    }

    @Override
    public void encode(ProtoWriter writer, PingMessage value) throws IOException {
      ProtoAdapter.STRING.encodeWithTag(writer, 1, value.id);
      ProtoAdapter.STRING.encodeWithTag(writer, 2, value.name);
      ProtoAdapter.STRING.encodeWithTag(writer, 3, value.email);
      ProtoAdapter.INT32.encodeWithTag(writer, 4, value.age);
      writer.writeBytes(value.unknownFields());
    }

    @Override
    public PingMessage decode(ProtoReader reader) throws IOException {
      Builder builder = new Builder();
      long token = reader.beginMessage();
      for (int tag; (tag = reader.nextTag()) != -1;) {
        switch (tag) {
          case 1: builder.id(ProtoAdapter.STRING.decode(reader)); break;
          case 2: builder.name(ProtoAdapter.STRING.decode(reader)); break;
          case 3: builder.email(ProtoAdapter.STRING.decode(reader)); break;
          case 4: builder.age(ProtoAdapter.INT32.decode(reader)); break;
          default: {
            FieldEncoding fieldEncoding = reader.peekFieldEncoding();
            Object value = fieldEncoding.rawProtoAdapter().decode(reader);
            builder.addUnknownField(tag, fieldEncoding, value);
          }
        }
      }
      reader.endMessage(token);
      return builder.build();
    }

    @Override
    public PingMessage redact(PingMessage value) {
      Builder builder = value.newBuilder();
      builder.clearUnknownFields();
      return builder.build();
    }
  }
}
